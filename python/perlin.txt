import pygame
from random import randint
from math import sin
pygame.init()
size = [800,500]
screen = pygame.display.set_mode(size)
clock = pygame.time.Clock()
class Graph:
    def __init__(self,dimenions,pos,color):
        self.data = []
        self.tops = size
        self.color = color
        self.dimensions = dimenions
        self.pos = pos
        self.size = 100
        self.count = 0
    def push(self,item):
        self.data.append(item)
        self.count +=1
        if self.count > self.size:
            self.data.remove(self.data[0])
            self.count -= 1
    def run(self):
        x = 0 
        for i in self.data:
            y = int(self.pos[1]+(self.dimensions[1]/2)-i)
            d = int((x/self.count)*self.dimensions[0])+self.pos[0]
            pygame.draw.circle(screen,self.color,(d,y),1)
            x += 1

class Perlin:
    def __init__(self,wave_number):
        self.waves = []
        self.top = 0 
        for i in range(wave_number):
            self.waves.append((2**i,2**-i))
    
    def get(self,t):
        x = 0
        for i in self.waves:
            x += sin(t*i[0])*i[1]
        return x
        
engine = Perlin(1000)        
data1 = Graph(size,(0,0),"orange")    
data2 = Graph(size,(0,0),"red")

t = 0    
while True:
    screen.fill("black")
    print(engine.get(t))
    data1.push(engine.get(t)*100)
    data1.run()
    data2.push(engine.get(t+5)*100)
    data2.run()
    pygame.display.flip()
    t += 0.01
    clock.tick(120)
    